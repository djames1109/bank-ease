plugins {
    id 'jacoco'
    id 'jacoco-report-aggregation'
    id 'org.sonarqube' version '3.5.0.2730'
    id 'org.castle.djames.bankease.arch-rules-enforcer' version '1.0.0-SNAPSHOT'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

dependencies {
    implementation project(':components:common')
    testImplementation 'org.castle.djames:arch-rules:1.0.0-SNAPSHOT'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:testcontainers:1.20.4'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.4'
    testImplementation 'org.testcontainers:postgresql:1.20.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

test {
    useJUnitPlatform()
//    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

//tasks.named("build") {
//    dependsOn("testCodeCoverageReport")
//    dependsOn("sonarqube")
//}


//jacocoTestReport {
//    dependsOn test // Ensure tests are executed before coverage is generated
//    reports {
//        xml.required = true
//        csv.required = false
//        html.required = true // Generate an HTML report for clearer visibility
//    }
//}

sonarqube {
    properties {
        property "sonar.projectKey", "$sonarProjectKey"
        property "sonar.organization", "$sonarProjectName"
        property "sonar.host.url", "$sonarHostUrl" // or your SonarQube server URL
        property "sonar.login", "$sonarLogin"

        // Pass the path to the aggregated XML report
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
    }
}
